#!/bin/sh

# TODO: print usage
# TODO: use options like `--command` and choose 1 main argument
# (e.g. `mail path`, default to echo)

# Usage: 
# `parsemail-exec <PATH_TO_MAIL_FILE> <PROGRAMM_TO_EXEC>`
# <PROGRAMM_TO_EXEC> will be called with parameters $TO $FROM $SUBJECT and $PRIORITY 

RESULT_ARR="$(sed 's/\t/ /g' "$1" |  # replace tabs with whitespaces first
    # line 1: Replace first colon by tab to split into 2 columns by first
    #   colon.
    # line 3: Escape < and > just after `To`is extracted, as `To` will be
    #   printed in notification title where escaping is not appropriate.
    # line 7: Return tab-separated result.
    awk -v d="'" -F '\t' '
{ sub(/: /, "\t") }
$1 == "To" { to = $2 }
{ gsub(/</, "\\&lt;"); gsub(/>/, "\\&gt;")}
$1 == "From" { from = $2 }
$1 == "Subject" { subject = $2 }
$1 == "X-Priority" { priority = $2 }
END { print to "\t" from "\t" subject "\t" priority }
')"

#echo "$RESULT_ARR" # uncomment to log parsed input delimited by tabs

echo "$RESULT_ARR" | 
    while IFS="$(printf '\t')" read -r TO FROM SUBJECT PRIORITY; do
        "$2" "$TO" "$FROM" "$SUBJECT" "${PRIORITY:-3}" 
    done

